&НаСервере
Функция СотрудникСуществует(ФИО) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Сотрудники.Наименование
		|ИЗ
		|	Справочник.Сотрудники КАК Сотрудники
		|ГДЕ
		|	Сотрудники.Наименование = &Сотрудник";
	
	Запрос.УстановитьПараметр("Сотрудник", ФИО);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Возврат ВыборкаДетальныеЗаписи.Следующий();
	
КонецФункции

&НаСервере
Функция СотрудникВШтате(Сотрудник) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КадровыеПеремещенияСрезПоследних.Период,
	|	КадровыеПеремещенияСрезПоследних.Сотрудник,
	|	КадровыеПеремещенияСрезПоследних.Действие
	|ИЗ
	|	РегистрСведений.КадровыеПеремещения.СрезПоследних() КАК КадровыеПеремещенияСрезПоследних
	|ГДЕ
	|	КадровыеПеремещенияСрезПоследних.Сотрудник = &Сотрудник";
	
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		
		Возврат ВыборкаДетальныеЗаписи.Действие <> Перечисления.КадровыеДействия.Увольнение;
		
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

&НаСервере
Функция СотрудникУволен(Сотрудник) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КадровыеПеремещенияСрезПоследних.Период,
	|	КадровыеПеремещенияСрезПоследних.Сотрудник,
	|	КадровыеПеремещенияСрезПоследних.Действие
	|ИЗ
	|	РегистрСведений.КадровыеПеремещения.СрезПоследних КАК КадровыеПеремещенияСрезПоследних
	|ГДЕ
	|	КадровыеПеремещенияСрезПоследних.Сотрудник = &Сотрудник";
	
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		
		Возврат ВыборкаДетальныеЗаписи.Действие = Перечисления.КадровыеДействия.Увольнение;
		
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

&НаСервере
Функция ПолучитьИсториюСотрудника(Сотрудник) Экспорт
	
	Если Не РольДоступна("HR_Менеджер") Тогда
		
		Сообщить("Недостаточно прав для получения истории! Обратитесь в HR отдел."); 
		                          
		Возврат Неопределено;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Сотрудник) Тогда
		
		Возврат Неопределено;
		
	КонецЕсли;
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ТолькоПросмотр = Истина;
	
	Макет = ПолучитьОбщийМакет("МакетОтчётаПосотруднику");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КадровыеПеремещения.Период,
	|	КадровыеПеремещения.Регистратор,
	|	ПРЕДСТАВЛЕНИЕ(КадровыеПеремещения.Регистратор),
	|	КадровыеПеремещения.Действие,
	|	КадровыеПеремещения.Подразделение,
	|	КадровыеПеремещения.Должность,
	|	КадровыеПеремещения.Оклад
	|ИЗ
	|	РегистрСведений.КадровыеПеремещения КАК КадровыеПеремещения
	|ГДЕ
	|	КадровыеПеремещения.Сотрудник.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Сотрудник);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	
	// Заполнение заголовка
	ОбластьЗаголовок.Параметры.Сотрудник = Сотрудник.Наименование;
	ОбластьЗаголовок.Параметры.ДатаРождения = Формат(Сотрудник.ДатаРождения, "ДФ=dd.MM.yyyy");
	
	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетальныеЗаписи.Уровень());
	КонецЦикла;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);
	
	Возврат ТабДок;
	
	КонецФункции

&НаСервере	
Функция ПолучитьДанныеСотрудникаПоСсылке(СотрудникСсылка) Экспорт
	
	Если Не ЗначениеЗаполнено(СотрудникСсылка) Тогда
		
		Возврат Неопределено;
		
	КонецЕсли;
	
	ОбъектСотрудник = СотрудникСсылка.ПолучитьОбъект();
	Результат = СоздатьДанныеСотрудника();
	
	Результат.Подразделение = ОбъектСотрудник.Подразделение;
	Результат.Должность = ОбъектСотрудник.Должность;
	Результат.Оклад = ОбъектСотрудник.Оклад;
	Результат.ДатаДокумента = ОбъектСотрудник.ДатаПриёма;
	Результат.ДатаРождения = ОбъектСотрудник.ДатаРождения;
	Результат.Уволен = ОбъектСотрудник.Уволен;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ОбновитьДанныеСотрудника(СотрудникСсылка, НовыеДанные) Экспорт
	
	Попытка
		
		СотрудникОбъект = СотрудникСсылка.ПолучитьОбъект();
		
		Если ЗначениеЗаполнено(НовыеДанные.Подразделение) Тогда
			СотрудникОбъект.Подразделение = НовыеДанные.Подразделение;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(НовыеДанные.Должность) Тогда
			СотрудникОбъект.Должность = НовыеДанные.Должность;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(НовыеДанные.Оклад) Тогда
			СотрудникОбъект.Оклад = НовыеДанные.Оклад;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(НовыеДанные.Уволен) Тогда
			СотрудникОбъект.Уволен = НовыеДанные.Уволен;
		КонецЕсли;
		
		СотрудникОбъект.Записать();
		
	Исключение
		
		Сообщить("При сохранении информации о сотруднике произошла ошибка: " + ОписаниеОшибки() + " Обновите данные вручную в справочнике ""Сотрудники""");
		Возврат Ложь;
		
	КонецПопытки;
	
	Возврат Истина;
			
КонецФункции

&НаСервере
Функция СоздатьДанныеСотрудника() Экспорт
	
	Результат = Новый Структура;
	
	Результат.Вставить("Подразделение", Перечисления.Подразделение.ПустаяСсылка());
	Результат.Вставить("Должность", Перечисления.Должность.ПустаяСсылка());
	Результат.Вставить("Оклад", Неопределено);
	Результат.Вставить("ДатаДокумента", Неопределено);
	Результат.Вставить("ДатаРождения", Неопределено);
	Результат.Вставить("Уволен", Неопределено);
	                                              
	Возврат Результат;	
	
КонецФункции